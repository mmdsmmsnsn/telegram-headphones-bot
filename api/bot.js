import TelegramBot from "node-telegram-bot-api"
import express from "express"

// –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.
// –ù–∞ Vercel —Ü–µ–π —Ç–æ–∫–µ–Ω –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∑—è—Ç–æ –∑—ñ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.
const token = process.env.TELEGRAM_BOT_TOKEN
const app = express()
const port = process.env.PORT || 3000 // Vercel –Ω–∞–¥–∞—Å—Ç—å —Å–≤—ñ–π PORT

// –î–ª—è webhook –∑–∞–º—ñ—Å—Ç—å polling.
// –ë–æ—Ç –±—É–¥–µ —Å–ª—É—Ö–∞—Ç–∏ HTTP –∑–∞–ø–∏—Ç–∏ –≤—ñ–¥ Telegram.
const bot = new TelegramBot(token)

// Middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ JSON –∑–∞–ø–∏—Ç—ñ–≤ –≤—ñ–¥ Telegram.
app.use(express.json())

// –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook.
// Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–¥–∞—î URL —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ VERCEL_URL.
// –Ø–∫—â–æ –≤–∏ —Ä–æ–∑–≥–æ—Ä—Ç–∞—î—Ç–µ –Ω–∞ —ñ–Ω—à—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ, –º–æ–∂–ª–∏–≤–æ, –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —ñ–Ω—à–∞ –∑–º—ñ–Ω–Ω–∞ –∞–±–æ —Ä—É—á–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è URL.
const webhookUrl = process.env.VERCEL_URL ? `https://${process.env.VERCEL_URL}` : "YOUR_PUBLIC_DOMAIN_OR_IP"

if (webhookUrl && token) {
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook –Ω–∞ Telegram API.
  // –®–ª—è—Ö `/api/webhook` –±—É–¥–µ –æ–±—Ä–æ–±–ª—è—Ç–∏—Å—è –Ω–∞—à–∏–º Express —Å–µ—Ä–≤–µ—Ä–æ–º.
  // bot.setWebHook(`${webhookUrl}/api/webhook`); // –ó–∞–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ —Ü–µ–π —Ä—è–¥–æ–∫
  console.log(`Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: ${webhookUrl}/api/webhook`)
} else {
  console.error("Webhook URL –∞–±–æ Token –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ. –ë–æ—Ç –º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–ª–µ–∂–Ω–∏–º —á–∏–Ω–æ–º.")
}

// –û–±—Ä–æ–±–∫–∞ webhook –∑–∞–øÔøΩÔøΩ—Ç—ñ–≤.
// Telegram –Ω–∞–¥—Å–∏–ª–∞—Ç–∏–º–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Ü–µ–π —à–ª—è—Ö.
app.post(`/api/webhook`, (req, res) => {
  bot.processUpdate(req.body)
  res.sendStatus(200) // –í–∞–∂–ª–∏–≤–æ –∑–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ 200 OK, —â–æ–± Telegram –∑–Ω–∞–≤, —â–æ –∑–∞–ø–∏—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ.
})

// –ó–¥–æ—Ä–æ–≤'—è —Å–µ—Ä–≤—ñ—Å—É (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –ø—Ä–∞—Ü—é—î –¥–æ–¥–∞—Ç–æ–∫).
// –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∑–∞ —Ü–∏–º URL —É –±—Ä–∞—É–∑–µ—Ä—ñ, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π –≤–∞—à –¥–æ–¥–∞—Ç–æ–∫.
app.get("/", (req, res) => {
  res.send("Telegram Bot is running!")
})

// --- –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ (—Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫–æ–¥—É) ---
const headphones = {
  airpods_pro: {
    name: "Apple AirPods Pro",
    price: 249,
    colors: ["white", "black"],
    image: "/placeholder.svg?height=300&width=300",
    description: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º",
  },
  sony_wh1000xm4: {
    name: "Sony WH-1000XM4",
    price: 349,
    colors: ["black", "silver", "blue"],
    image: "/placeholder.svg?height=300&width=300",
    description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –Ω–∞–∫–ª–∞–¥–Ω—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º",
  },
  beats_studio3: {
    name: "Beats Studio3 Wireless",
    price: 199,
    colors: ["black", "red", "white", "blue"],
    image: "/placeholder.svg?height=300&width=300",
    description: "–°—Ç–∏–ª—å–Ω—ñ –±–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –ø–æ—Ç—É–∂–Ω–∏–º –±–∞—Å–æ–º",
  },
  bose_qc45: {
    name: "Bose QuietComfort 45",
    price: 329,
    colors: ["black", "white"],
    image: "/placeholder.svg?height=300&width=300",
    description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º",
  },
}

// –ö–æ–ª—å–æ—Ä–∏ –∑ –µ–º–æ–¥–∑—ñ
const colorEmojis = {
  white: "‚ö™ –ë—ñ–ª–∏–π",
  black: "‚ö´ –ß–æ—Ä–Ω–∏–π",
  silver: "üîò –°—Ä—ñ–±–ª—è—Å—Ç–∏–π",
  blue: "üîµ –°–∏–Ω—ñ–π",
  red: "üî¥ –ß–µ—Ä–≤–æ–Ω–∏–π",
}

// –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–æ—à–∏–∫—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.
// –£–≤–∞–≥–∞: –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞ —Ü—ñ –¥–∞–Ω—ñ –±—É–¥—É—Ç—å –≤—Ç—Ä–∞—á–µ–Ω—ñ.
// –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö (Supabase, Neon, MongoDB —Ç–æ—â–æ).
const userCarts = new Map()

// --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ callback –∑–∞–ø–∏—Ç—ñ–≤ (—Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫–æ–¥—É) ---

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id
  const welcomeMessage = `
üéß –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤!

–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –≤—ñ–¥ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤.

–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥", callback_data: "catalog" }],
        [{ text: "üõí –ú—ñ–π –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å", callback_data: "about" }],
      ],
    },
  }

  await bot.sendMessage(chatId, welcomeMessage, options)
})

// –û–±—Ä–æ–±–∫–∞ callback –∑–∞–ø–∏—Ç—ñ–≤
bot.on("callback_query", async (callbackQuery) => {
  const message = callbackQuery.message
  const chatId = message.chat.id
  const data = callbackQuery.data
  const userId = callbackQuery.from.id

  try {
    if (data === "catalog") {
      await showCatalog(chatId)
    } else if (data === "cart") {
      await showCart(chatId, userId)
    } else if (data === "about") {
      await showAbout(chatId)
    } else if (data.startsWith("product_")) {
      const productId = data.replace("product_", "")
      await showProduct(chatId, productId, userId)
    } else if (data.startsWith("color_")) {
      const [, productId, color] = data.split("_")
      await selectColor(chatId, userId, productId, color)
    } else if (data.startsWith("add_to_cart_")) {
      const [, , , productId, color] = data.split("_")
      await addToCart(chatId, userId, productId, color)
    } else if (data.startsWith("remove_")) {
      const itemIndex = Number.parseInt(data.replace("remove_", ""))
      await removeFromCart(chatId, userId, itemIndex)
    } else if (data === "checkout") {
      await checkout(chatId, userId)
    } else if (data === "back_to_catalog") {
      await showCatalog(chatId)
    } else if (data === "back_to_main") {
      await showMainMenu(chatId)
    }

    // –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ callbackQuery, —â–æ–± –∫–Ω–æ–ø–∫–∞ –Ω–µ –∑–∞–ª–∏—à–∞–ª–∞—Å—è "–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ—é".
    await bot.answerCallbackQuery(callbackQuery.id)
  } catch (error) {
    console.error("Error handling callback:", error)
    await bot.answerCallbackQuery(callbackQuery.id, { text: "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞" })
  }
})

// –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async function showMainMenu(chatId) {
  const welcomeMessage = `
üéß –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤!

–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –≤—ñ–¥ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤.

–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥", callback_data: "catalog" }],
        [{ text: "üõí –ú—ñ–π –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å", callback_data: "about" }],
      ],
    },
  }

  await bot.sendMessage(chatId, welcomeMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥
async function showCatalog(chatId) {
  const catalogMessage = "üéß –ö–∞—Ç–∞–ª–æ–≥ –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤:\n\n–û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É:"

  const keyboard = Object.keys(headphones).map((productId) => [
    {
      text: `${headphones[productId].name} - $${headphones[productId].price}`,
      callback_data: `product_${productId}`,
    },
  ])

  keyboard.push([{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }])

  const options = {
    reply_markup: {
      inline_keyboard: keyboard,
    },
  }

  await bot.sendMessage(chatId, catalogMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç
async function showProduct(chatId, productId, userId) {
  const product = headphones[productId]
  if (!product) return

  const productMessage = `
üéß ${product.name}

üí∞ –¶—ñ–Ω–∞: $${product.price}
üìù ${product.description}

üé® –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–ª—å–æ—Ä–∏:
  `

  const colorKeyboard = product.colors.map((color) => [
    {
      text: colorEmojis[color],
      callback_data: `color_${productId}_${color}`,
    },
  ])

  colorKeyboard.push([{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "back_to_catalog" }])

  const options = {
    reply_markup: {
      inline_keyboard: colorKeyboard,
    },
  }

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ –∑ –æ–ø–∏—Å–æ–º —Ç–∞ –∫–Ω–æ–ø–∫–∞–º–∏
  await bot.sendPhoto(chatId, product.image, {
    caption: productMessage,
    reply_markup: options.reply_markup,
  })
}

// –í–∏–±—ñ—Ä –∫–æ–ª—å–æ—Ä—É
async function selectColor(chatId, userId, productId, color) {
  const product = headphones[productId]
  if (!product) return

  const confirmMessage = `
‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏:
üéß ${product.name}
üé® –ö–æ–ª—ñ—Ä: ${colorEmojis[color]}
üí∞ –¶—ñ–Ω–∞: $${product.price}

–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞?
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõí –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data: `add_to_cart_${productId}_${color}` }],
        [{ text: "üé® –û–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π –∫–æ–ª—ñ—Ä", callback_data: `product_${productId}` }],
        [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "back_to_catalog" }],
      ],
    },
  }

  await bot.sendMessage(chatId, confirmMessage, options)
}

// –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
async function addToCart(chatId, userId, productId, color) {
  const product = headphones[productId]
  if (!product) return

  if (!userCarts.has(userId)) {
    userCarts.set(userId, [])
  }

  const cart = userCarts.get(userId)
  cart.push({
    productId,
    name: product.name,
    color,
    price: product.price,
  })

  const successMessage = `
‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!

üéß ${product.name}
üé® ${colorEmojis[color]}
üí∞ $${product.price}

–©–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ?
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõí –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏", callback_data: "catalog" }],
        [{ text: "üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "checkout" }],
      ],
    },
  }

  await bot.sendMessage(chatId, successMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—à–∏–∫
async function showCart(chatId, userId) {
  const cart = userCarts.get(userId) || []

  if (cart.length === 0) {
    const emptyMessage = "üõí –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π\n\n–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä—ñ–≤."
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: "üõçÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "catalog" }],
          [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
        ],
      },
    }
    await bot.sendMessage(chatId, emptyMessage, options)
    return
  }

  let cartMessage = "üõí –í–∞—à –∫–æ—à–∏–∫:\n\n"
  let total = 0

  cart.forEach((item, index) => {
    cartMessage += `${index + 1}. ${item.name}\n`
    cartMessage += `   üé® ${colorEmojis[item.color]}\n`
    cartMessage += `   üí∞ $${item.price}\n\n`
    total += item.price
  })

  cartMessage += `üí≥ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: $${total}`

  const keyboard = cart.map((item, index) => [{ text: `‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ ${item.name}`, callback_data: `remove_${index}` }])

  keyboard.push(
    [{ text: "üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "checkout" }],
    [{ text: "üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏", callback_data: "catalog" }],
  )

  const options = {
    reply_markup: {
      inline_keyboard: keyboard,
    },
  }

  await bot.sendMessage(chatId, cartMessage, options)
}

// –í–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—à–∏–∫–∞
async function removeFromCart(chatId, userId, itemIndex) {
  const cart = userCarts.get(userId) || []

  if (itemIndex >= 0 && itemIndex < cart.length) {
    const removedItem = cart.splice(itemIndex, 1)[0]
    await bot.sendMessage(chatId, `‚úÖ ${removedItem.name} –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—à–∏–∫–∞`)
    await showCart(chatId, userId) // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
  }
}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
async function checkout(chatId, userId) {
  const cart = userCarts.get(userId) || []

  if (cart.length === 0) {
    await bot.sendMessage(chatId, "‚ùå –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π")
    return
  }

  let orderMessage = "üìã –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n"
  let total = 0

  cart.forEach((item, index) => {
    orderMessage += `${index + 1}. ${item.name}\n`
    orderMessage += `   üé® ${colorEmojis[item.color]}\n`
    orderMessage += `   üí∞ $${item.price}\n\n`
    total += item.price
  })

  orderMessage += `üí≥ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: $${total}\n\n`
  orderMessage += `üìû –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏:\n`
  orderMessage += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: +380123456789\n`
  orderMessage += `üìß Email: orders@headphones.com\n\n`
  orderMessage += `üÜî –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: #${Date.now()}`

  // –û—á–∏—â–∞—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è
  userCarts.set(userId, [])

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "catalog" }],
        [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
      ],
    },
  }

  await bot.sendMessage(chatId, orderMessage, options)
}

// –ü—Ä–æ –Ω–∞—Å
async function showAbout(chatId) {
  const aboutMessage = `
‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω

üéß –ú–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–∂—É —è–∫—ñ—Å–Ω–∏—Ö –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤ –≤—ñ–¥ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö —Å–≤—ñ—Ç–æ–≤–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤.

‚úÖ –ù–∞—à—ñ –ø–µ—Ä–µ–≤–∞–≥–∏:
‚Ä¢ –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ –ø—Ä–æ–¥—É–∫—Ü—ñ—è
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç—ñ—è –Ω–∞ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏
‚Ä¢ –®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞

üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏:
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +380123456789
‚Ä¢ Email: info@headphones.com
‚Ä¢ –ê–¥—Ä–µ—Å–∞: –º. –ö–∏—ó–≤, –≤—É–ª. –ú—É–∑–∏—á–Ω–∞, 1

üïí –†–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏:
–ü–Ω-–ü—Ç: 9:00-18:00
–°–±-–ù–¥: 10:00-16:00
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "catalog" }],
        [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
      ],
    },
  }

  await bot.sendMessage(chatId, aboutMessage, options)
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ 'app' –¥–ª—è Vercel Serverless Functions.
// –¶–µ –¥–æ–∑–≤–æ–ª—è—î Vercel –∑–Ω–∞–π—Ç–∏ –≤–∞—à Express –¥–æ–¥–∞—Ç–æ–∫.
export default app
