// –¶–µ–π –ª–æ–≥ –º–∞—î –∑'—è–≤–∏—Ç–∏—Å—è –≤ –ª–æ–≥–∞—Ö Vercel, —è–∫—â–æ —Ñ–∞–π–ª –≤–∑–∞–≥–∞–ª—ñ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è
console.log("Bot file started! (Version with all logs)")

import TelegramBot from "node-telegram-bot-api"
import express from "express"

const token = process.env.TELEGRAM_BOT_TOKEN
const app = express()
const port = process.env.PORT || 3000

const bot = new TelegramBot(token)

app.use(express.json())

// –û–±—Ä–æ–±–∫–∞ webhook –∑–∞–ø–∏—Ç—ñ–≤.
app.post(`/api/webhook`, (req, res) => {
  console.log("Received webhook request on /api/webhook!") // –õ–æ–≥ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –≤—Ö—ñ–¥–Ω–æ–≥–æ webhook
  bot.processUpdate(req.body)
  res.sendStatus(200)
})

// –ó–¥–æ—Ä–æ–≤'—è —Å–µ—Ä–≤—ñ—Å—É.
app.get("/", (req, res) => {
  console.log("Received root path request on /!") // –õ–æ–≥ –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –∫–æ—Ä–µ–Ω–µ–≤–∏–π —à–ª—è—Ö
  res.send("Telegram Bot is running!")
})

// --- –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ ---
const headphones = {
  soundcore_p30i: {
    name: "Soundcore P30i",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "pink"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+P30i",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_liberty_4: {
    name: "Soundcore Liberty 4",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Liberty+4",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_liberty_3_pro: {
    name: "Soundcore Liberty 3 Pro",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "white"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Liberty+3+Pro",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_space_a40: {
    name: "Soundcore Space A40",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "white", "dark_blue"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Space+A40",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_aerofit: {
    name: "Soundcore AeroFit",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "pink"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+AeroFit",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_a20_sleep: {
    name: "Soundcore A20 Sleep",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["white"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+A20+Sleep",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_tune: {
    name: "Soundcore TUNE",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+TUNE",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_q21i_nc: {
    name: "Soundcore Q21i NC",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Q21i+NC",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_space_one: {
    name: "Soundcore Space One",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "light_blue"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Space+One",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_space_one_pro: {
    name: "Soundcore Space One Pro",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "cream"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Space+One+Pro",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –£–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_liberty_4_pro: {
    name: "Soundcore Liberty 4 Pro",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Liberty+4+Pro",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –ö–æ—Ä–æ–±–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_liberty_4_nc: {
    name: "Soundcore Liberty 4 NC",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "white", "blue"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+Liberty+4+NC",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –ö–æ—Ä–æ–±–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
  soundcore_aerofit_pro: {
    name: "Soundcore AeroFit Pro",
    price: "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ",
    colors: ["black", "blue"],
    image: "/placeholder.svg?height=300&width=300&text=Soundcore+AeroFit+Pro",
    description: "–û—Ä–∏–≥—ñ–Ω–∞–ª / –ù–æ–≤—ñ / –ö–æ—Ä–æ–±–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ / –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î",
  },
}

// –ö–æ–ª—å–æ—Ä–∏ –∑ –µ–º–æ–¥–∑—ñ
const colorEmojis = {
  white: "‚ö™ –ë—ñ–ª–∏–π",
  black: "‚ö´ –ß–æ—Ä–Ω–∏–π",
  silver: "üîò –°—Ä—ñ–±–ª—è—Å—Ç–∏–π",
  blue: "üîµ –°–∏–Ω—ñ–π",
  red: "üî¥ –ß–µ—Ä–≤–æ–Ω–∏–π",
  pink: "üå∏ –†–æ–∂–µ–≤–∏–π",
  dark_blue: "üíô –¢–µ–º–Ω–æ-—Å–∏–Ω—ñ–π",
  light_blue: "üíß –°–≤—ñ—Ç–ª–æ-–±–ª–∞–∫–∏—Ç–Ω–∏–π",
  cream: "üç¶ –ö—Ä–µ–º–æ–≤–∏–π",
}

// –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–æ—à–∏–∫—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤ –ø–∞–º'—è—Ç—ñ, –¥–∞–Ω—ñ –≤—Ç—Ä–∞—á–∞—é—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É)
const userCarts = new Map()

// --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ callback –∑–∞–ø–∏—Ç—ñ–≤ ---

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id
  const welcomeMessage = `
üéß –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤ Soundcore!

–í—Å—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –Ω–æ–≤—ñ, –∞–ª–µ —É–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞. –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î.

–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥", callback_data: "catalog" }],
        [{ text: "üõí –ú—ñ–π –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å", callback_data: "about" }],
      ],
    },
  }

  await bot.sendMessage(chatId, welcomeMessage, options)
})

// –û–±—Ä–æ–±–∫–∞ callback –∑–∞–ø–∏—Ç—ñ–≤
bot.on("callback_query", async (callbackQuery) => {
  console.log("Callback query handler triggered!") // –õ–æ–≥, —â–æ –æ–±—Ä–æ–±–Ω–∏–∫ –≤–∏–∫–ª–∏–∫–∞–Ω–æ
  const message = callbackQuery.message
  const chatId = message.chat.id
  const data = callbackQuery.data
  const userId = callbackQuery.from.id

  console.log("Received callback query data:", data) // –õ–æ–≥—É—î–º–æ –¥–∞–Ω—ñ callback

  try {
    if (data === "catalog") {
      await showCatalog(chatId)
    } else if (data === "cart") {
      await showCart(chatId, userId)
    } else if (data === "about") {
      await showAbout(chatId)
    } else if (data.startsWith("product_")) {
      const productId = data.replace("product_", "")
      await showProduct(chatId, productId, userId)
    } else if (data.startsWith("color_")) {
      const [, productId, color] = data.split("_")
      await selectColor(chatId, userId, productId, color)
    } else if (data.startsWith("add_to_cart_")) {
      const [, , , productId, color] = data.split("_")
      await addToCart(chatId, userId, productId, color)
    } else if (data.startsWith("remove_")) {
      const itemIndex = Number.parseInt(data.replace("remove_", ""))
      await removeFromCart(chatId, userId, itemIndex)
    } else if (data === "checkout") {
      await checkout(chatId, userId)
    } else if (data === "back_to_catalog") {
      await showCatalog(chatId)
    } else if (data === "back_to_main") {
      await showMainMenu(chatId)
    }

    await bot.answerCallbackQuery(callbackQuery.id) // –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callbackQuery
  } catch (error) {
    console.error("Error handling callback:", error)
    await bot.answerCallbackQuery(callbackQuery.id, { text: "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞" })
  }
})

// –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async function showMainMenu(chatId) {
  const welcomeMessage = `
üéß –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤ Soundcore!

–í—Å—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –Ω–æ–≤—ñ, –∞–ª–µ —É–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞. –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î.

–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥", callback_data: "catalog" }],
        [{ text: "üõí –ú—ñ–π –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å", callback_data: "about" }],
      ],
    },
  }

  await bot.sendMessage(chatId, welcomeMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥
async function showCatalog(chatId) {
  const catalogMessage = "üéß –ö–∞—Ç–∞–ª–æ–≥ –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤ Soundcore:\n\n–û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É:"

  const keyboard = Object.keys(headphones).map((productId) => [
    {
      text: `${headphones[productId].name} ${headphones[productId].price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `- $${headphones[productId].price}` : ""}`,
      callback_data: `product_${productId}`,
    },
  ])

  keyboard.push([{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }])

  const options = {
    reply_markup: {
      inline_keyboard: keyboard,
    },
  }

  await bot.sendMessage(chatId, catalogMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç
async function showProduct(chatId, productId, userId) {
  const product = headphones[productId]
  if (!product) return

  // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π VERCEL_URL —Ç—É—Ç, —â–æ–± –≤—ñ–Ω –∑–∞–≤–∂–¥–∏ –±—É–≤ —Å–≤—ñ–∂–∏–º
  const currentWebhookUrl = process.env.VERCEL_URL ? `https://${process.env.VERCEL_URL}` : "https://example.com" // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è

  const productMessage = `
üéß ${product.name}

${product.price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `üí∞ –¶—ñ–Ω–∞: $${product.price}` : "üí∞ –¶—ñ–Ω–∞: –£—Ç–æ—á–Ω—é–π—Ç–µ"}
üìù ${product.description}

üé® –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–ª—å–æ—Ä–∏:
  `

  const colorKeyboard = product.colors.map((color) => [
    {
      text: colorEmojis[color],
      callback_data: `color_${productId}_${color}`,
    },
  ])

  colorKeyboard.push([{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "back_to_catalog" }])

  const options = {
    reply_markup: {
      inline_keyboard: colorKeyboard,
    },
  }

  // –ö–æ–Ω—Å—Ç—Ä—É—é—î–º–æ –ø–æ–≤–Ω—É URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const fullImageUrl = `${currentWebhookUrl}${product.image}`
  console.log("DEBUG: VERCEL_URL (inside showProduct):", process.env.VERCEL_URL) // –õ–æ–≥—É—î–º–æ —Å–∏—Ä–∏–π VERCEL_URL
  console.log("DEBUG: Constructed fullImageUrl (inside showProduct):", fullImageUrl) // –õ–æ–≥—É—î–º–æ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω—É URL

  await bot.sendPhoto(chatId, fullImageUrl, {
    caption: productMessage,
    reply_markup: options.reply_markup,
  })
}

// –í–∏–±—ñ—Ä –∫–æ–ª—å–æ—Ä—É
async function selectColor(chatId, userId, productId, color) {
  const product = headphones[productId]
  if (!product) return

  const confirmMessage = `
‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏:
üéß ${product.name}
üé® –ö–æ–ª—ñ—Ä: ${colorEmojis[color]}
${product.price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `üí∞ –¶—ñ–Ω–∞: $${product.price}` : "üí∞ –¶—ñ–Ω–∞: –£—Ç–æ—á–Ω—é–π—Ç–µ"}

–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞?
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõí –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data: `add_to_cart_${productId}_${color}` }],
        [{ text: "üé® –û–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π –∫–æ–ª—ñ—Ä", callback_data: `product_${productId}` }],
        [{ text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "back_to_catalog" }],
      ],
    },
  }

  await bot.sendMessage(chatId, confirmMessage, options)
}

// –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
async function addToCart(chatId, userId, productId, color) {
  const product = headphones[productId]
  if (!product) return

  if (!userCarts.has(userId)) {
    userCarts.set(userId, [])
  }

  const cart = userCarts.get(userId)
  cart.push({
    productId,
    name: product.name,
    color,
    price: product.price, // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ü—ñ–Ω—É —è–∫ —î (—Ä—è–¥–æ–∫ –∞–±–æ —á–∏—Å–ª–æ)
  })

  const successMessage = `
‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!

üéß ${product.name}
üé® ${colorEmojis[color]}
${product.price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `üí∞ $${product.price}` : "üí∞ –¶—ñ–Ω–∞: –£—Ç–æ—á–Ω—é–π—Ç–µ"}

–©–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ?
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõí –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫", callback_data: "cart" }],
        [{ text: "üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏", callback_data: "catalog" }],
        [{ text: "üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "checkout" }],
      ],
    },
  }

  await bot.sendMessage(chatId, successMessage, options)
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—à–∏–∫
async function showCart(chatId, userId) {
  const cart = userCarts.get(userId) || []

  if (cart.length === 0) {
    const emptyMessage = "üõí –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π\n\n–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä—ñ–≤."
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: "üõçÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "catalog" }],
          [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
        ],
      },
    }
    await bot.sendMessage(chatId, emptyMessage, options)
    return
  }

  let cartMessage = "üõí –í–∞—à –∫–æ—à–∏–∫:\n\n"
  let total = 0 // –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞, —è–∫—â–æ –≤—Å—ñ —Ü—ñ–Ω–∏ —á–∏—Å–ª–æ–≤—ñ

  cart.forEach((item, index) => {
    cartMessage += `${index + 1}. ${item.name}\n`
    cartMessage += `   üé® ${colorEmojis[item.color]}\n`
    cartMessage += `   üí∞ ${item.price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `$${item.price}` : "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ"}\n\n`

    // –î–æ–¥–∞—î–º–æ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü—ñ–Ω–∞ —á–∏—Å–ª–æ–≤–∞
    if (typeof item.price === "number") {
      total += item.price
    }
  })

  cartMessage += `üí≥ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${total > 0 ? `$${total}` : "–£—Ç–æ—á–Ω—é–π—Ç–µ"}`

  const keyboard = cart.map((item, index) => [{ text: `‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ ${item.name}`, callback_data: `remove_${index}` }])

  keyboard.push(
    [{ text: "üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "checkout" }],
    [{ text: "üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏", callback_data: "catalog" }],
  )

  const options = {
    reply_markup: {
      inline_keyboard: keyboard,
    },
  }

  await bot.sendMessage(chatId, cartMessage, options)
}

// –í–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—à–∏–∫–∞
async function removeFromCart(chatId, userId, itemIndex) {
  const cart = userCarts.get(userId) || []

  if (itemIndex >= 0 && itemIndex < cart.length) {
    const removedItem = cart.splice(itemIndex, 1)[0]
    await bot.sendMessage(chatId, `‚úÖ ${removedItem.name} –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—à–∏–∫–∞`)
    await showCart(chatId, userId) // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
  }
}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
async function checkout(chatId, userId) {
  const cart = userCarts.get(userId) || []

  if (cart.length === 0) {
    await bot.sendMessage(chatId, "‚ùå –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π")
    return
  }

  let orderMessage = "üìã –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n"
  let total = 0

  cart.forEach((item, index) => {
    orderMessage += `${index + 1}. ${item.name}\n`
    orderMessage += `   üé® ${colorEmojis[item.color]}\n`
    orderMessage += `   üí∞ ${item.price !== "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ" ? `$${item.price}` : "–¶—ñ–Ω—É —É—Ç–æ—á–Ω—é–π—Ç–µ"}\n\n`

    if (typeof item.price === "number") {
      total += item.price
    }
  })

  orderMessage += `üí≥ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${total > 0 ? `$${total}` : "–£—Ç–æ—á–Ω—é–π—Ç–µ"}\n\n`
  orderMessage += `üìû –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏:\n`
  orderMessage += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: +380123456789\n`
  orderMessage += `üìß Email: orders@headphones.com\n\n`
  orderMessage += `üÜî –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: #${Date.now()}`

  userCarts.set(userId, []) // –û—á–∏—â–∞—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "catalog" }],
        [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
      ],
    },
  }

  await bot.sendMessage(chatId, orderMessage, options)
}

// –ü—Ä–æ –Ω–∞—Å
async function showAbout(chatId) {
  const aboutMessage = `
‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω Soundcore

üéß –ú–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–∂—É —è–∫—ñ—Å–Ω–∏—Ö –Ω–∞–≤—É—à–Ω–∏–∫—ñ–≤ Soundcore. –í—Å—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –Ω–æ–≤—ñ, –∞–ª–µ —É–ø–∞–∫–æ–≤–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞. –ì–∞—Ä–∞–Ω—Ç—ñ–π –Ω–µ–º–∞—î.

‚úÖ –ù–∞—à—ñ –ø–µ—Ä–µ–≤–∞–≥–∏:
‚Ä¢ –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ –ø—Ä–æ–¥—É–∫—Ü—ñ—è
‚Ä¢ –®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞

üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏:
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +380123456789
‚Ä¢ Email: info@headphones.com
‚Ä¢ –ê–¥—Ä–µ—Å–∞: –º. –ö–∏—ó–≤, –≤—É–ª. –ú—É–∑–∏—á–Ω–∞, 1

üïí –†–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏:
–ü–Ω-–ü—Ç: 9:00-18:00
–°–±-–ù–¥: 10:00-16:00
  `

  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üõçÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data: "catalog" }],
        [{ text: "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data: "back_to_main" }],
      ],
    },
  }

  await bot.sendMessage(chatId, aboutMessage, options)
}

export default app
