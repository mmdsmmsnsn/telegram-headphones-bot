import dotenv from "dotenv"
dotenv.config({ path: ".env.local" })

console.log("–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local...")
const result = dotenv.config({ path: ".env.local" })

if (result.error) {
  console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env.local:", result.error)
} else {
  console.log("‚úÖ .env.local —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
}

console.log("–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BLOB_READ_WRITE_TOKEN...")
console.log("–ó–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞:", process.env.BLOB_READ_WRITE_TOKEN ? "–Ω–∞–π–¥–µ–Ω" : "–Ω–µ –Ω–∞–π–¥–µ–Ω")

import { put } from "@vercel/blob"
import fs from "fs"
import path from "path"

const BLOB_READ_WRITE_TOKEN = process.env.BLOB_READ_WRITE_TOKEN

if (!BLOB_READ_WRITE_TOKEN) {
  console.error("BLOB_READ_WRITE_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
  console.error("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
  process.exit(1)
}

async function uploadImagesToBlob() {
  const imagesDir = path.join(process.cwd(), "public", "images")

  try {
    const files = fs.readdirSync(imagesDir)
    const imageFiles = files.filter((file) => file.endsWith(".jpg") || file.endsWith(".jpeg") || file.endsWith(".png"))

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏`)

    const uploadedImages = {}

    for (const file of imageFiles) {
      const filePath = path.join(imagesDir, file)
      const fileBuffer = fs.readFileSync(filePath)

      console.log(`–ó–∞–≥—Ä—É–∂–∞—é ${file}...`)

      const blob = await put(file, fileBuffer, {
        access: "public",
        token: BLOB_READ_WRITE_TOKEN,
      })

      uploadedImages[file] = blob.url
      console.log(`‚úÖ ${file} –∑–∞–≥—Ä—É–∂–µ–Ω: ${blob.url}`)
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º URLs –≤ JSON —Ñ–∞–π–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –±–æ—Ç–∞
    const outputPath = path.join(process.cwd(), "blob-urls.json")
    fs.writeFileSync(outputPath, JSON.stringify(uploadedImages, null, 2))

    console.log(`\nüéâ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã!`)
    console.log(`URLs —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputPath}`)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:", error)
  }
}

uploadImagesToBlob()
